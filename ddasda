# Stage 1: Build the application
FROM eclipse-temurin:17 AS builder
WORKDIR /workspace

# Copy Maven wrapper and settings
COPY mvnw .
COPY .mvn .mvn
COPY pom.xml .
COPY src src

# Build the Spring Boot application
RUN ./mvnw clean package -DskipTests

# Extract the fat jar using layertools
ARG JAR_FILE=target/*.jar
RUN mkdir -p /workspace/application /workspace/dependencies /workspace/snapshot-dependencies /workspace/spring-boot-loader
RUN java -Djarmode=layertools -jar ${JAR_FILE} extract

# Stage 2: Create the runtime image
FROM eclipse-temurin:17
WORKDIR /workspace

# Add a non-root user
RUN useradd spring
USER spring

# Copy layers from the builder image
COPY --from=builder /workspace/dependencies/ ./
COPY --from=builder /workspace/spring-boot-loader/ ./
COPY --from=builder /workspace/snapshot-dependencies/ ./
COPY --from=builder /workspace/application/ ./

# Set the entry point
ENTRYPOINT ["java", "org.springframework.boot.loader.JarLauncher"]

version: '3.9'

services:
  catalog-service:
    image: catalog-service:latest
    build:
      context: ..
      dockerfile: Docker/Dockerfile
    container_name: catalog-service
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/catalogdb
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_PROFILES_ACTIVE=prod
    ports:
      - "8080:8080"
    depends_on:
      - db

  db:
    image: postgres:15
    container_name: postgres-db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: catalogdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:


